package LoginIntroServlet;

import java.sql.*;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import model.DatabaseConnection;

public class AutoGenerateDiscount {

    public static void generate(String userId) {
        try (Connection conn = DatabaseConnection.getConnection()) {

            // 1. Lấy tổng chi tiêu
            PreparedStatement ps = conn.prepareStatement(
                "SELECT total_spent FROM users WHERE IdUser = ?"
            );
            ps.setString(1, userId);
            ResultSet rs = ps.executeQuery();

            if (!rs.next()) {
                rs.close();
                ps.close();
                return;
            }

            double totalSpent = rs.getDouble("total_spent");
            rs.close();
            ps.close();

            int milestone = (int) (totalSpent / 1_000_000);

            // 2. Lấy mã giảm giá cao nhất đã có
            ps = conn.prepareStatement(
                "SELECT MAX(amount) AS maxAmount FROM discount_codes WHERE IdUser = ?"
            );
            ps.setString(1, userId);  // ✅ sửa ở đây
            rs = ps.executeQuery();

            int currentMaxMilestone = 0;
            if (rs.next() && rs.getObject("maxAmount") != null) {
                int amountMax = rs.getInt("maxAmount");
                currentMaxMilestone = amountMax / 100_000;
            }

            rs.close();
            ps.close();

            // 3. Tạo mã mới nếu đạt thêm mốc
            for (int i = currentMaxMilestone + 1; i <= milestone; i++) {
                String code = "SALE" + (i * 100);
                int amount = i * 100_000;
                String img = code.toLowerCase() + ".jpg";

                PreparedStatement insert = conn.prepareStatement(
                    "INSERT INTO discount_codes (IdUser, discount_code, amount, created_at, img, used) "
                    + "VALUES (?, ?, ?, ?, ?, 0)"
                );
                insert.setString(1, userId);
                insert.setString(2, code);
                insert.setInt(3, amount);
                insert.setString(4, LocalDateTime.now()
                        .format(DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss")));
                insert.setString(5, img);

                insert.executeUpdate();
                insert.close();

                System.out.println("Đã tạo mã " + code + " cho user " + userId);
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
